/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdio.h>
#include <string.h>

#ifdef __cplusplus
extern "C"{
#endif
static jclass contextClass;
static jclass signatureClass;
static jclass packageNameClass;
static jclass packageInfoClass;

/**
* Android keystore签名字符串
*/
//todo mark: This is the keystore's sign.
const char* RELEASE_SIGN = "3082037930820261a00302010202046b0d1efc300d06092a864886f70d01010b0500306c310b300906035504061302434e3110300e060355040813075369436875616e3110300e060355040713074368656e67447531123010060355040a130948494b4352454154453111300f060355040b1308446576656c656f70311230100603550403130948494b4352454154453020170d3138313232313039323432335a180f32313338313132323039323432335a306c310b300906035504061302434e3110300e060355040813075369436875616e3110300e060355040713074368656e67447531123010060355040a130948494b4352454154453111300f060355040b1308446576656c656f70311230100603550403130948494b43524541544530820122300d06092a864886f70d01010105000382010f003082010a02820101009bcb0bd8a3c81b36dbc5509cacb1dcba64132aa9f85fed6b7c16a5ac08299b10d4b6076564b876550121cb4aabc1f65f9d183b8d163fce47ca39f7ea3c8ea6e3d2409aa81b32a88a3c03257c95cb44516940423e3e068e77d00256d6a4779dcd7eaaaa8944c1cae8d622d6387e2ae7bd05c74f3dd0e72832106dbc37d3290f3e9bf2e3cae94cf5093a87c0cf8f2b9148f252d417b6dca7900ee67f62f8b786b5b380a04b11e2612bf80fdc8122de2e5f24fd821912aceb8f7e5d53a71d5d7d88a9944002b896e6418000e36abb6c781be878fcd975a129cbdb33738b04d45ba0c266a2ba624913012290f8c4425385a6bf68043adb14da577368f285cb95660d0203010001a321301f301d0603551d0e04160414ba97090b4becc1614671c21ac05b977815df1ffd300d06092a864886f70d01010b0500038201010045d6fba9cd7687283dd07b818a710c8064d6c70adae5c478ff1dbb100d05b8014d459ecc9a464349293525aa49aebf75fed5784f5e9fd85b35d2a385b1b0921e2f135ce3a873c13851d1d674b3ca172cbdaed6748be7457137a06082b95a8b6f84261fef0b8d7a757be02a99734ab1947ccfe57a14eebf09ecb4426025219c3b860504d7f63ec42bff6c45dc69e5dd0522b24cd12067e6261d6c16fa857ddfed8a409f8cf0666b74edc597af88bba7c7d33185caae7b086bff398e5b14a13af1efc374d7556ac1cbbb7f6ab3ca80d1dd71e7f6075c3a2a4b738c6f1f0a03b190e2b47606d62c51231885bb3a540e102e93d99cf26a7cf4a863328c42665d2024" ;
//todo mark: This is the security key.
const char* SECURITY_KEY = "1234abcd";

const char* getSignString(JNIEnv *env,jobject contextObject) {
    jmethodID getPackageManagerId = (env)->GetMethodID(contextClass, "getPackageManager","()Landroid/content/pm/PackageManager;");
    jmethodID getPackageNameId = (env)->GetMethodID(contextClass, "getPackageName","()Ljava/lang/String;");
    jmethodID signToStringId = (env)->GetMethodID(signatureClass, "toCharsString","()Ljava/lang/String;");
    jmethodID getPackageInfoId = (env)->GetMethodID(packageNameClass, "getPackageInfo","(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;");
    jobject packageManagerObject =  (env)->CallObjectMethod(contextObject, getPackageManagerId);
    jstring packNameString =  (jstring)(env)->CallObjectMethod(contextObject, getPackageNameId);
    jobject packageInfoObject = (env)->CallObjectMethod(packageManagerObject, getPackageInfoId,packNameString, 64);
    jfieldID signaturefieldID =(env)->GetFieldID(packageInfoClass,"signatures", "[Landroid/content/pm/Signature;");
    jobjectArray signatureArray = (jobjectArray)(env)->GetObjectField(packageInfoObject, signaturefieldID);
    jobject signatureObject =  (env)->GetObjectArrayElement(signatureArray,0);
    return (env)->GetStringUTFChars((jstring)(env)->CallObjectMethod(signatureObject, signToStringId),0);
}

/*
 * Class:     com_hik_core_java_security_SecurityFactory
 * Method:    getKeyFromNative
 * Signature: ()Ljava/lang/String;
 * Desc：获取加密秘钥
 */
jstring Java_com_hik_core_java_security_SecurityFactory_getKeyFromNative(JNIEnv *env,jobject thiz,jobject contextObject) {

    const char* signString =  getSignString(env,contextObject);
    if(strcmp(signString,RELEASE_SIGN)==0)//签名一致  返回合法的 api key，否则返回错误
    {
       return (env)->NewStringUTF(SECURITY_KEY);
    }else
    {
       return (env)->NewStringUTF("cannot get key,Illegal signature ");
    }
}
/**
    利用OnLoad钩子,初始化需要用到的Class类.
*/
JNIEXPORT jint JNICALL JNI_OnLoad (JavaVM* vm,void* reserved){

     JNIEnv* env = NULL;
     jint result=-1;
     if(vm->GetEnv((void**)&env, JNI_VERSION_1_4) != JNI_OK)
       return result;

     contextClass = (jclass)env->NewGlobalRef((env)->FindClass("android/content/Context"));
     signatureClass = (jclass)env->NewGlobalRef((env)->FindClass("android/content/pm/Signature"));
     packageNameClass = (jclass)env->NewGlobalRef((env)->FindClass("android/content/pm/PackageManager"));
     packageInfoClass = (jclass)env->NewGlobalRef((env)->FindClass("android/content/pm/PackageInfo"));

     return JNI_VERSION_1_4;
 }
#ifdef __cplusplus
}
#endif
